# This is the main configuration file for the application.
# https://www.playframework.com/documentation/latest/ConfigFile

play {
  
  # Configure which hosts are allowed to connect
  # Pattern '.' means match all, which is not recommended in production!
  # See https://www.playframework.com/documentation/2.7.0/AllowedHostsFilter
  # filters.hosts.allowed = ["."]
  
  modules.enabled += "com.alveotech.sps.modules.ConfigurationModule"
  
  # Remove if pidfile is required
  server.pidfile.path = /dev/null
  
  server.max-header-size = 64k
  
  server.max-content-length = 1MB
  
  http {
    context = "/spreadsheets"
    errorHandler = play.http.JsonHttpErrorHandler
    
    secret.key = ${PLAY_HTTP_SECRET_KEY}
    
    parser {
      maxMemoryBuffer = 100MB
      
      maxDiskBuffer = 100MB
    }
  }
  
  filters.csrf.header.bypassHeaders {
    Csrf-Token = "nocheck"
    Csrf-Token = ${?CSRF_TOKEN}
  }
  
  # disable the built in filters
  http.filters = play.api.http.NoHttpFilters
  
  filters {
    contentType {
      # If non empty, then requests will be checked if the content type is not in this list.
      whiteList = ["application/json"]
    }
  }
  
  temporaryFile {
    reaper {
      enabled = true
      initialDelay = "5 minutes"
      interval = "30 seconds"
      olderThan = "30 minutes"
    }
  }
}

http {
  address = "0.0.0.0"
  port = 9000
}

https.port = ${?HTTPS_PORT}

play.server.https.keyStore {
  path = ${?HTTPS_KEY_STORE_PATH}
  type = ${?HTTPS_KEY_STORE_TYPE}
  password = ${?HTTPS_KEY_STORE_PASSWORD}
  algorithm = ${?HTTPS_KEY_STORE_ALGORITHM}
}

# See https://github.com/brettwooldridge/HikariCP/wiki/About-Pool-Sizing

executors {
  
  # Thread context for database operations
  database {
    executor = "thread-pool-executor"
    throughput = 1
    thread-pool-executor {
      fixed-pool-size = 9
      fixed-pool-size = ${?DATABASE_THREAD_POOL}
    }
  }
  
  scheduling {
    executor = "thread-pool-executor"
    throughput = 1
    thread-pool-executor {
      fixed-pool-size = 9
      fixed-pool-size = ${?SCHEDULING_THREAD_POOL}
    }
  }
  
  tasks {
    executor = "thread-pool-executor"
    throughput = 1
    thread-pool-executor {
      fixed-pool-size = 9
      fixed-pool-size = ${?TASK_THREAD_POOL}
    }
  }
}


sps {
  persistent.store = POSTGRESQL
  supportedFormats: ["xls", "xlsm", "xlsx"]
  
  supportedOperations: [
    {
      type = "CreateObjects"
      description = "Upload new instruments [Reference data Only]"
    },
    {
      type = "SetReferenceValues"
      description = "Upload reference data for existing instruments"
    },
    {
      type = "SetTimeseriesValues"
      description = "Upload time-series data for existing instruments"
    },
    {
      type = "SetCurveValues"
      description = "Upload curve data for existing instruments"
    }
  ]
  
  external {
    processTracking {
      url = null
      cookieFile = null
      cookieFile = ${?COOKIE_FILE_PROCESS_TRACKING}
    }
    
    bdms {
      url = "http://bdms-service:9000/ac"
      cookieFile = null
      cookieFile = ${?COOKIE_FILE_BDMS}
      # timeout for BDMS response (5000 ms by default)
      timeout = ${?BDMS_SERVICE_TIMEOUT}
    }
  }
  
  # documents older than this value can be deleted
  documentExpireTime = 60 minutes
  documentExpireTime = ${?DOC_EXPIRE_TIME}
  
  # Delimiter of values in a single field, required for multivalues
  # Default is '|'.
  # E.g. a value field containing 'a|b|c' is parsed as the multivalued value: [a,b,c]
  multivalueDelimiter = "|"
  multivalueDelimiter = ${?MULTIVALUE_DELIMITER}
}

cassandra {
  contactPoints = ["0.0.0.0"]
  port = 9042
  createSchemaOnStartup = false
  schemaFile = "/path/to/schema.cql"
  keyspace = ""
  keyspace = ${?CASSANDRA_KEYSPACE}
  
  user = null
  user = ${?CASSANDRA_USER}
  
  password = null
  password = ${?CASSANDRA_PASSWORD}
  
  reconnectionPolicy {
    
    # Possible types: ["exponential", "constant"]
    type = "exponential"
    type = ${?CASSANDRA_RECONNECTION_POLICY_TYPE}
    
    # only used if type == "exponential"
    baseDelayMs = 1000
    baseDelayMs = ${?CASSANDRA_RECONNECTION_POLICY_BASE_DELAY}
    
    maxDelayMs = 10000
    maxDelayMs = ${?CASSANDRA_RECONNECTION_POLICY_MAX_DELAY}
    
    # only used if type == "constant"
    delayMs = 1000
    delayMs = ${?CASSANDRA_RECONNECTION_POLICY_DELAY}
  }
  
  queryLogger {
    
    # To enable query logging, set 'enabled' to true
    # 
    # Important note: If set to enabled, make sure to adjust the logging
    # framework to accept log messages from QueryLogger, through the logback
    # configuration file.
    # See: https://docs.datastax.com/en/developer/java-driver/3.7/manual/logging/
    enabled = false
    
    # value must be greater than zero
    slowQueryLatencyThresholdMillis = 5000
    
    # -1 means unlimited (use with care)
    maxQueryStringLength = 500
    
    # -1 means unlimited (use with care)
    maxLoggedParameters = 50
    
    # -1 means unlimited (use with care)
    maxParameterValueLength = 50
  }
}

play.evolutions.autocommit = true
play.evolutions.db.default.enabled = true
play.evolutions.db.default.autoApply = true

jpa.spreadsheets = SpreadsheetPostgresPersistenceUnit

db.default {
  driver = org.postgresql.Driver
  url = "jdbc:postgresql://"${POSTGRES_HOST}":"${POSTGRES_PORT}"/"${POSTGRES_DATABASE}
  username = ${POSTGRES_USERNAME}
  password = ${POSTGRES_PASSWORD}
  logSql = true
  jndiName = Spreadsheets_DS
}

secret.name.prefix = "sps-secret."
secrets.dir = /dev/null
play.application.loader = com.alveotech.services.config.ApplicationLoader
