# This is the main configuration file the application. It uses the HOCON format.
# You may change the configuration here to match you environment,
# or include this file in a custom configuration file that you can pass
# to the application using: -Dconfig.file={path_to_file}
# 
# See: https://www.playframework.com/documentation/2.7.0/ConfigFile
# https://www.playframework.com/documentation/2.7.0/ProductionConfiguration


datasets.persistent.store = POSTGRESQL

play.evolutions.autocommit = true
play.evolutions.db.default.enabled = true
play.evolutions.db.default.autoApply = true

jpa.datasets = DataSetsPostgresPersistenceUnit

db.default {
  driver = org.postgresql.Driver
  url = "jdbc:postgresql://"${POSTGRES_HOST}":"${POSTGRES_PORT}"/"${POSTGRES_DATABASE}
  username = ${POSTGRES_USERNAME}
  password = ${POSTGRES_PASSWORD}
  jndiName = DataSets_DS
  logSql = true
}

play.filters.enabled += "play.filters.gzip.GzipFilter"

play {
  filters.hosts.allowed = ["."]
  
  modules.enabled += "com.ac.datasetsservice.modules.ConfigurationModule"
  modules.enabled += "com.ac.authorization.AuthorizationModule"
  
  # Remove if pidfile is required
  server.pidfile.path = /dev/null
  
  server.max-header-size = 64k
  server.max-header-size = ${?MAX_HEADER_VALUE_LENGTH}
  
  http {
    context = "/datasets"
    errorHandler = play.http.JsonHttpErrorHandler
    secret.key = ${?PLAY_HTTP_SECRET_KEY}
    
    parser {
      maxMemoryBuffer = 1MB
      maxMemoryBuffer = ${?PLAY_HTTP_PARSER_MAX_MEMORY_BUFFER}
      
      maxDiskBuffer = 10MB
      maxDiskBuffer = ${?PLAY_HTTP_PARSER_MAX_DISK_BUFFER}
    }
  }
  
  filters.csrf.header.bypassHeaders {
    Csrf-Token = "nocheck"
    Csrf-Token = ${?CSRF_TOKEN}
  }
  
  filters {
    contentType {
      # If non empty, then requests will be checked if the content type is not in this list.
      whiteList = ["application/json"]
    }
    hosts {
      allowed = ["."]
    }
    gzip {
      compressionLevel = 9
      contentType {
        whiteList = []
        blackList = []
      }
    }
  }
}

akka.http.parsing.max-uri-length = 2k
akka.http.parsing.max-uri-length = ${?MAX_URI_LENGTH}

http {
  address = "0.0.0.0"
  
  # to disable, set port to: disabled
  port = 9000
}

https.port = ${?HTTPS_PORT}

play.server.https.keyStore {
  path = ${?HTTPS_KEY_STORE_PATH}
  type = ${?HTTPS_KEY_STORE_TYPE}
  password = ${?HTTPS_KEY_STORE_PASSWORD}
  algorithm = ${?HTTPS_KEY_STORE_ALGORITHM}
}

# See https://github.com/brettwooldridge/HikariCP/wiki/About-Pool-Sizing
contexts {
  
  # Thread context for database operations
  dbOperations {
    executor = "thread-pool-executor"
    throughput = 1
    thread-pool-executor {
      fixed-pool-size = 9
      fixed-pool-size = ${?DB_CONTEXT_POOL_SIZE}
    }
  }
}

ac.authentication {
  enabled = true
  enabled = ${?AUTHENTICATION_ENABLED}
  keystore.file = "conf/keystore.jks"
  keystore.file = ${?KEYSTORE_FILE}
  keystore.password = ${KEYSTORE_PASSWORD}
  key.alias = ${KEYSTORE_KEY_ALIAS}
  key.password = ${KEYSTORE_KEY_PASSWORD}
  cipher.algorithm = ${KEYSTORE_SIG_ALG}
  rights.cookie.name = "rights"
  password.expiration.enabled = false
  rights.expiration.enabled = false
}

secret.name.prefix = "data-sets-secret."
secrets.dir = "/dev/null"
play.application.loader = com.alveotech.services.config.ApplicationLoader

validation.ignoreUnknownProperties = true
