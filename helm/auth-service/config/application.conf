play.http.secret.key = ${?PLAY_HTTP_SECRET_KEY}
play.modules.enabled += "com.ac.authorization.AuthorizationModule"
play.allowHttpContext = true

# Number of database connections
# See https://github.com/brettwooldridge/HikariCP/wiki/About-Pool-Sizing
fixedConnectionPool = 9

play.filters.csrf.header.bypassHeaders {
  Csrf-Token = "nocheck"
}

ac.authentication {
  openid.auth.endpoint = {{.Values.MFAEndpoints.auth | default "" | quote}}
  openid.logout.endpoint = {{.Values.MFAEndpoints.logout | default "" | quote}}
  openid.logout.with.token = false
  openid.token.endpoint = {{.Values.MFAEndpoints.token | default "" | quote}}
  openid.client.id = ""
  openid.client.id = ${?MFA_CLIENT_ID}
  openid.client.secret = ""
  openid.client.secret = ${?MFA_CLIENT_SECRET}
  openid.redirect.uri = {{.Values.MFAEndpoints.redirect | default "" | quote}}
  openid.grant.type = "authorization_code"
  openid.ops360.uri = {{.Values.MFAEndpoints.ops360 | default "" | quote}}
  openid.logout.redirect.uri = {{.Values.MFAEndpoints.logoutRedirect | default "" | quote}}
  openid.request.scopes = "openid%20profile"
  method.external = false
  keystore.file = {{(printf "%s/%s" .Values.serviceConfigPath "keystore.jks") | quote}}
  keystore.password = ${?KEYSTORE_PASSWORD}
  key.alias = ${?KEYSTORE_KEY_ALIAS}
  key.password = ${?KEYSTORE_KEY_PASSWORD}
  cipher.algorithm = ${?KEYSTORE_SIG_ALG}
  rights.cookie.name = "rights"
  enabled = {{.Values.authEnabled | default false}}
  password {
    expiration {
      enabled = false
      days = 30
    }
    strength {
      enabled = false
      minPasswordLength = 6
    }
  }
  rights.expiration {
    enabled = false
    minutes = 30
  }
  # ldap authentication
  ldap {
    enabled = false
    ldapURL = "ldap://172.24.40.32:389"
    ldapAuthentication = simple
    ldapSecurityPrincipal = "CN=$userName,CN=Users,DC=sso,DC=test"
    ldapInitialContextFactory = com.sun.jndi.ldap.LdapCtxFactory
  }
  load {
    scheduler {
      initialDelaySeconds = 10
      durationPeriodMinutes = 5
    }
    services = "conf/services.json"
    dataViews = "conf/load/dataviews.json"
    bpm = "conf/load/bpm.json"
  }
}

db.default {
  driver = org.postgresql.Driver
  url = "jdbc:postgresql://"${POSTGRES_HOST}":"${POSTGRES_PORT}"/"${POSTGRES_DATABASE}
  username = ${POSTGRES_USERNAME}
  password = ${POSTGRES_PASSWORD}
  jndiName = DefaultDS
  # Set Hikari to fixed size
  hikaricp.minimumIdle = ${fixedConnectionPool}
  hikaricp.maximumPoolSize = ${fixedConnectionPool}
}

ebean.default = ["com.ac.*", "com.ac.authentication.*"]

play.evolutions.autocommit = true
play.evolutions.autoApply = true
play.evolutions.enabled = true

# Job queue sized to HikariCP connection pool
database.dispatcher {
  executor = "thread-pool-executor"
  throughput = 1
  thread-pool-executor {
    fixed-pool-size = ${fixedConnectionPool}
  }
}

cron.dispatcher {
  executor = "thread-pool-executor"
  throughput = 1
  thread-pool-executor {
    fixed-pool-size = ${fixedConnectionPool}
  }
}

play.http.errorHandler = com.ac.util.exception.handler.ErrorHandler
play.http.requestHandler = "com.ac.authentication.v1.RequestHandler"

play.filters.disabled += "play.filters.headers.SecurityHeadersFilter"
play.filters.disabled += "play.filters.csrf.CSRFFilter"

play.filters {
  contentType {
    # If non empty, then requests will be checked if the content type is not in this list.
    whiteList = ["application/json"]
  }
}

play.http.context = "/auth"
secret.name.prefix = "auth-secret."

# # Added for SCB
secrets.dir = "/dev/null"
play.application.loader = com.alveotech.services.config.ApplicationLoader

play.filters.enabled += "play.filters.gzip.GzipFilter"
play.filters {
  akka {
    actor {
      default-dispatcher {
        fork-join-executor {
          parallelism-factor = 1.0
          parallelism-max = 3
        }
      }
    }
  }
  hosts {
    allowed = ["."]
  }
  gzip {
    compressionLevel = 9
    contentType {
      whiteList = []
      blackList = []
    }
  }
}

play.server {
  http {
    port = 9000
    address = "0.0.0.0"
  }
  max-header-size = 16M
  pidfile.path = /dev/null
}